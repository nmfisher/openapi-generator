@serializable
class {{classname}} {
  /// The underlying value of this enum member.
  final {{dataType}} value;

  @override
  String toString() {
    return value;
  }

  const {{classname}}._internal(this.value);

  {{#allowableValues}}
    {{#enumVars}}
      {{#description}}
  /// {{description}}
      {{/description}}
  static const {{classname}} {{{name}}} = const {{classname}}._internal({{{value}}});
    {{/enumVars}}
  {{/allowableValues}}
  
  static List<{{classname}}> listFromJson(List<dynamic> json) {
    return json == null ? new List<{{classname}}>() : json.map((value) => {{classname}}TypeTransformer.decode(value)).toList();
  }

}

class {{classname}}TypeTransformer {

  @override
  static dynamic encode({{classname}} data) {
    return data.value;
  }

  @override
  static {{classname}} decode(dynamic data) {
    switch (data) {
      {{#allowableValues}}
        {{#enumVars}}
      case {{{value}}}: return {{classname}}.{{{name}}};
        {{/enumVars}}
      {{/allowableValues}}
      default: throw('Unknown enum value to decode: $data');
    }
  }
}
